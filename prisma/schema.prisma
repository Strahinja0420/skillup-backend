// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuctionStatus {
  DRAFT
  ACTIVE
  ENDED
  CANCELLED
}

enum AuctionCategory {
  SPORTS
  TOYS
  FASHION
  ELECTRONICS
  BOOKS
  OTHER
  HOME
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String?   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdAuctions Auction[]
  bids            Bid[]
}

model Auction {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  category    AuctionCategory
  status      AuctionStatus   @default(DRAFT)

  startingBid  Int
  currentBid   Int?
  reservePrice Int?
  buyNowPrice  Int?

  startTime DateTime @default(now())
  endTime   DateTime

  images String @default("")

  creatorId Int
  creator   User  @relation(fields: [creatorId], references: [id])
  bids      Bid[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bid {
  id     Int @id @default(autoincrement())
  amount Int

  auctionId Int
  auction   Auction @relation(fields: [auctionId], references: [id])
  bidderId  Int
  bidder    User    @relation(fields: [bidderId], references: [id])

  createdAt DateTime @default(now())
}
